   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"MPUeasy.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.enableMPU,"ax",%progbits
  17              		.align	1
  18              		.global	enableMPU
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	enableMPU:
  25              	.LFB128:
  26              		.file 1 "MPUeasy.c"
   1:MPUeasy.c     **** /*
   2:MPUeasy.c     ****  * MPUeasy.c
   3:MPUeasy.c     ****  *
   4:MPUeasy.c     ****  *  Created on: 25.11.2015
   5:MPUeasy.c     ****  *      Author: Florian Wilde
   6:MPUeasy.c     ****  */
   7:MPUeasy.c     **** 
   8:MPUeasy.c     **** #include <xmc_common.h>
   9:MPUeasy.c     **** #include "MPUeasy.h"
  10:MPUeasy.c     **** 
  11:MPUeasy.c     **** void enableMPU(int enableBackgroundRegion) {
  27              		.loc 1 11 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.LBB18:
  34              	.LBB19:
  35              		.file 2 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h"
   1:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.1
   5:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * @date     02. February 2017
   6:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /*
   8:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  *
  10:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  *
  12:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  *
  16:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  *
  18:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
  24:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  25:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  28:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  34:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  36:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                     __asm
  37:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  38:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  39:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                  inline
  40:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  41:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  44:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  47:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  48:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  50:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  51:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  53:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  55:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  61:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
  62:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  64:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  65:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  67:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
  70:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  71:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  72:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   @{
  76:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
  77:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  78:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
  79:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
  83:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
  85:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
  87:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  88:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  89:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
  90:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
  94:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
  96:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  97:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
  98:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
  99:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 100:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 101:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 102:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 103:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 104:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 105:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
 106:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 107:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 109:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 110:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 112:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 113:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 114:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 115:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 116:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 117:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 118:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 119:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 120:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 121:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 122:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 123:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 124:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 125:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 127:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 128:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 129:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 130:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 131:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 132:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 133:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 134:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 135:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 136:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 137:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 138:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 139:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 140:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 141:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 142:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 143:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 144:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 145:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 146:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 147:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 148:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 149:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 150:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 151:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 152:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 153:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 154:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 155:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 156:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 157:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 158:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 159:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 160:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 161:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 162:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 163:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 164:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 165:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 166:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 167:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 168:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 169:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 170:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 171:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 172:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 173:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 174:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 175:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 176:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 177:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 178:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 180:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 181:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 182:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 183:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 184:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 185:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 186:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 187:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 188:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 189:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 190:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 191:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 192:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 193:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 194:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 195:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 196:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 197:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 198:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 199:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 200:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 201:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 202:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 203:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 204:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 205:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 206:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 207:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 208:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 209:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 210:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 211:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 212:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 213:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 214:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 215:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 216:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 217:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 218:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 219:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 220:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 221:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 222:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 223:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 224:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 225:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 226:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 227:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 228:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 229:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 230:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 231:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 232:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 233:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 234:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 235:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 236:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 237:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 238:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 239:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 240:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 241:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 242:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 243:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 244:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 245:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 246:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 247:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 248:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 249:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 250:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 251:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 252:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 253:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 254:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 255:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 256:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 257:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 258:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 259:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 260:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 261:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 262:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 263:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 264:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 265:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 266:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 267:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 268:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 269:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 270:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 271:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 272:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 273:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 274:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 275:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 276:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 277:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 278:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 279:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 280:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 281:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 282:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 283:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 284:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 285:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 286:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 287:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 288:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 289:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 290:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 291:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 292:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 293:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 294:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 295:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 296:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 297:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 298:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 299:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 300:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 301:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 302:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 303:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 304:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 305:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 306:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 307:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 308:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 309:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 310:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 311:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 312:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 313:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 314:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 315:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 316:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 317:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 318:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 319:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 320:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 321:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 322:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 323:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 324:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 325:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 326:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 327:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 328:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 329:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 330:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 331:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 332:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 333:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 334:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 335:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 336:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 337:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 338:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 339:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 340:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 341:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 342:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 343:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 344:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 345:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 346:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 347:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 348:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 349:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 350:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 351:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 352:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 353:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 354:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 355:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 356:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 357:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 358:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 359:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 360:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 361:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 362:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 363:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 364:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 365:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 366:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 367:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 368:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 369:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 370:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 371:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 372:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 373:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 374:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 375:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 376:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 377:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 378:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 379:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 380:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 381:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 382:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 383:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 384:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 385:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 386:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 387:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 388:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 389:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 390:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 391:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 392:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 393:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 394:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 395:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 396:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 397:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 398:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 399:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 400:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 401:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 402:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 403:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 404:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 405:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 406:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 407:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 408:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 409:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 410:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 411:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 412:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 413:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 414:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 415:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 416:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 417:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 418:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 419:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 420:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 421:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 422:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 423:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 424:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 425:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 426:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 427:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 428:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 429:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 430:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 431:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 432:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 433:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 434:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 435:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 436:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 437:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 438:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 439:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 440:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 441:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 442:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 443:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 444:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 445:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 446:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 447:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 448:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 449:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 450:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 451:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 452:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 453:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 454:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 455:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 456:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 457:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 458:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 459:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 460:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 461:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 462:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 463:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 464:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 465:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 466:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 467:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 468:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 469:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 470:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 471:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 473:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 474:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 476:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 477:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 478:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 479:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 480:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 481:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 482:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 483:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 484:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 485:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 486:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 487:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 488:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 489:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 490:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 491:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 492:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 493:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 494:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 495:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 496:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 497:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 498:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 499:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 500:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 501:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 502:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 503:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 504:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 505:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 506:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 507:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 508:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 509:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 510:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 511:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 512:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 513:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 514:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 515:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 516:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 517:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 518:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 519:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 520:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 521:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 522:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 523:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 524:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 525:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 526:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 527:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 528:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 529:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 530:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 531:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 532:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 533:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 534:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 535:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 536:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 537:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 538:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 539:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 540:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 541:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 542:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 543:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 544:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 545:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 546:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 547:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 548:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 549:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 550:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 551:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 552:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 553:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 555:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 556:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 557:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 558:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 559:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 560:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 561:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 562:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 563:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 564:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 565:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 566:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 567:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 568:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 569:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 570:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 571:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 572:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 573:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 574:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 575:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 576:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 577:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 578:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 579:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 580:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 581:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 582:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 583:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 584:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 585:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 586:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 587:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 588:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 589:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 590:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 591:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 592:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 593:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 594:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 595:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 596:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 597:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 598:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 599:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 600:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 601:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 602:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 603:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 604:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 605:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 606:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 607:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 608:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 609:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 610:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 611:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 612:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 613:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 614:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 615:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 616:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 617:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 618:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 619:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 620:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 621:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 622:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 623:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 624:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 625:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 626:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 627:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 628:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 629:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 630:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 631:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 632:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 633:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 634:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 635:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 636:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 637:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 638:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 639:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 640:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 641:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   return(result);
 642:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #else
 643:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****    return(0U);
 644:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 645:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 646:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 647:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 648:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 649:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 650:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 651:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 652:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 653:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 654:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 655:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 656:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 657:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 658:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #else
 659:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 660:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 661:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 662:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 663:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 664:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 665:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 666:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 667:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 668:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 669:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 670:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 671:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 672:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 673:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 674:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   @{
 675:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** */
 676:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 677:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 678:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 679:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 680:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 681:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 682:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 683:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 684:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #else
 685:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 686:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 687:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 688:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #endif
 689:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 690:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 691:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 692:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 693:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 694:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 695:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //{
 696:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("nop");
 697:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //}
 698:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 699:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 700:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 701:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 702:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 703:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 704:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 705:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //{
 706:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 707:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //}
 708:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 709:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 710:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 711:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 712:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 713:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 714:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 715:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 716:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 717:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //{
 718:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 719:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //}
 720:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 721:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 722:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 723:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 724:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 725:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 726:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 727:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 728:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //{
 729:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //  __ASM volatile ("sev");
 730:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** //}
 731:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 732:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 733:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 734:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 735:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 736:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 737:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 738:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 739:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 740:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 741:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 742:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 743:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 744:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 745:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** 
 746:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** /**
 747:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 748:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 749:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 750:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****  */
 751:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 752:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** {
 753:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  36              		.loc 2 753 0
  37              		.syntax unified
  38              	@ 753 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
  39 0000 BFF34F8F 		dsb 0xF
  40              	@ 0 "" 2
  41              		.thumb
  42              		.syntax unified
  43              	.LBE19:
  44              	.LBE18:
  45              	.LBB20:
  46              	.LBB21:
 742:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
  47              		.loc 2 742 0
  48              		.syntax unified
  49              	@ 742 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
  50 0004 BFF36F8F 		isb 0xF
  51              	@ 0 "" 2
  52              		.thumb
  53              		.syntax unified
  54              	.LBE21:
  55              	.LBE20:
  12:MPUeasy.c     **** 	__DSB();
  13:MPUeasy.c     **** 	__ISB();
  14:MPUeasy.c     **** 	PPB->MPU_CTRL |= (enableBackgroundRegion ? 0x4 : 0x0) | 0x1;
  56              		.loc 1 14 0
  57 0008 4FF0E023 		mov	r3, #-536813568
  58 000c D3F8943D 		ldr	r3, [r3, #3476]
  59 0010 0028     		cmp	r0, #0
  60 0012 14BF     		ite	ne
  61 0014 0522     		movne	r2, #5
  62 0016 0122     		moveq	r2, #1
  63 0018 1343     		orrs	r3, r3, r2
  64 001a 4FF0E022 		mov	r2, #-536813568
  65 001e C2F8943D 		str	r3, [r2, #3476]
  66              	.LBB22:
  67              	.LBB23:
  68              		.loc 2 753 0
  69              		.syntax unified
  70              	@ 753 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
  71 0022 BFF34F8F 		dsb 0xF
  72              	@ 0 "" 2
  73              		.thumb
  74              		.syntax unified
  75              	.LBE23:
  76              	.LBE22:
  77              	.LBB24:
  78              	.LBB25:
 742:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
  79              		.loc 2 742 0
  80              		.syntax unified
  81              	@ 742 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
  82 0026 BFF36F8F 		isb 0xF
  83              	@ 0 "" 2
  84              		.thumb
  85              		.syntax unified
  86              	.LBE25:
  87              	.LBE24:
  15:MPUeasy.c     **** 	__DSB();
  16:MPUeasy.c     **** 	__ISB();
  17:MPUeasy.c     **** }
  88              		.loc 1 17 0
  89 002a 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE128:
  93              		.section	.text.disableMPU,"ax",%progbits
  94              		.align	1
  95              		.global	disableMPU
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu fpv4-sp-d16
 101              	disableMPU:
 102              	.LFB129:
  18:MPUeasy.c     **** 
  19:MPUeasy.c     **** void disableMPU(void) {
 103              		.loc 1 19 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LBB26:
 109              	.LBB27:
 110              		.loc 2 753 0
 111              		.syntax unified
 112              	@ 753 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
 113 0000 BFF34F8F 		dsb 0xF
 114              	@ 0 "" 2
 115              		.thumb
 116              		.syntax unified
 117              	.LBE27:
 118              	.LBE26:
 119              	.LBB28:
 120              	.LBB29:
 742:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 121              		.loc 2 742 0
 122              		.syntax unified
 123              	@ 742 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
 124 0004 BFF36F8F 		isb 0xF
 125              	@ 0 "" 2
 126              		.thumb
 127              		.syntax unified
 128              	.LBE29:
 129              	.LBE28:
  20:MPUeasy.c     **** 	__DSB();
  21:MPUeasy.c     **** 	__ISB();
  22:MPUeasy.c     **** 	PPB->MPU_CTRL = 0;
 130              		.loc 1 22 0
 131 0008 4FF0E023 		mov	r3, #-536813568
 132 000c 0022     		movs	r2, #0
 133 000e C3F8942D 		str	r2, [r3, #3476]
 134              	.LBB30:
 135              	.LBB31:
 136              		.loc 2 753 0
 137              		.syntax unified
 138              	@ 753 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
 139 0012 BFF34F8F 		dsb 0xF
 140              	@ 0 "" 2
 141              		.thumb
 142              		.syntax unified
 143              	.LBE31:
 144              	.LBE30:
 145              	.LBB32:
 146              	.LBB33:
 742:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h **** }
 147              		.loc 2 742 0
 148              		.syntax unified
 149              	@ 742 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/cmsis_gcc.h" 1
 150 0016 BFF36F8F 		isb 0xF
 151              	@ 0 "" 2
 152              		.thumb
 153              		.syntax unified
 154              	.LBE33:
 155              	.LBE32:
  23:MPUeasy.c     **** 	__DSB();
  24:MPUeasy.c     **** 	__ISB();
  25:MPUeasy.c     **** }
 156              		.loc 1 25 0
 157 001a 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE129:
 161              		.section	.text.configMPU,"ax",%progbits
 162              		.align	1
 163              		.global	configMPU
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	configMPU:
 170              	.LFB130:
  26:MPUeasy.c     **** 
  27:MPUeasy.c     **** void configMPU(MPUconfig_t config) {
 171              		.loc 1 27 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 70B4     		push	{r4, r5, r6}
 177              	.LCFI0:
 178              		.cfi_def_cfa_offset 12
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 5, -8
 181              		.cfi_offset 6, -4
 182 0002 85B0     		sub	sp, sp, #20
 183              	.LCFI1:
 184              		.cfi_def_cfa_offset 32
 185 0004 04AB     		add	r3, sp, #16
 186 0006 03E90700 		stmdb	r3, {r0, r1, r2}
 187 000a 019A     		ldr	r2, [sp, #4]
 188              	.LVL1:
 189 000c 029B     		ldr	r3, [sp, #8]
 190              	.LVL2:
 191 000e 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 192              	.LVL3:
  28:MPUeasy.c     **** 	/* to align baseAddress, we shift right and then left again,
  29:MPUeasy.c     **** 	 * with at least the position of the ADDR bitfield
  30:MPUeasy.c     **** 	 * so other bitfields don't get changed */
  31:MPUeasy.c     **** 	uint8_t addrShift = config.size > PPB_MPU_RBAR_ADDR_Pos ? \
 193              		.loc 1 31 0
 194 0012 0E46     		mov	r6, r1
 195 0014 0929     		cmp	r1, #9
 196 0016 38BF     		it	cc
 197 0018 0926     		movcc	r6, #9
 198              	.LVL4:
  32:MPUeasy.c     **** 	                    config.size : PPB_MPU_RBAR_ADDR_Pos;
  33:MPUeasy.c     **** 	/* TEX, S, C, and B field will be set according to recommendation
  34:MPUeasy.c     **** 	 * in table 2-17 of manual */
  35:MPUeasy.c     **** 	uint8_t autoSet = config.baseAddress < (void *)0x10000000 ? 0x2 : \
 199              		.loc 1 35 0
 200 001a B2F1805F 		cmp	r2, #268435456
 201 001e 08D3     		bcc	.L8
 202              		.loc 1 35 0 is_stmt 0 discriminator 1
 203 0020 B2F1804F 		cmp	r2, #1073741824
 204 0024 2AD3     		bcc	.L9
 205              		.loc 1 35 0 discriminator 3
 206 0026 B2F1C04F 		cmp	r2, #1610612736
 207 002a 34BF     		ite	cc
 208 002c 0524     		movcc	r4, #5
 209 002e 0724     		movcs	r4, #7
 210 0030 00E0     		b	.L6
 211              	.L8:
 212              		.loc 1 35 0
 213 0032 0224     		movs	r4, #2
 214              	.L6:
 215              	.LVL5:
  36:MPUeasy.c     **** 	                  config.baseAddress < (void *)0x40000000 ? 0x6 : \
  37:MPUeasy.c     **** 	                  config.baseAddress < (void *)0x60000000 ? 0x5 : \
  38:MPUeasy.c     **** 	                                                            0x7;
  39:MPUeasy.c     **** 	/* switch to correct priority slot */
  40:MPUeasy.c     **** 	PPB->MPU_RNR = config.priority & 0x7;
 216              		.loc 1 40 0 is_stmt 1 discriminator 12
 217 0034 9DF80D50 		ldrb	r5, [sp, #13]	@ zero_extendqisi2
 218 0038 05F00705 		and	r5, r5, #7
 219 003c 4FF0E020 		mov	r0, #-536813568
 220 0040 C0F8985D 		str	r5, [r0, #3480]
  41:MPUeasy.c     **** 	/* disable region before changing parameters to avoid glitches */
  42:MPUeasy.c     **** 	PPB->MPU_RASR &= ~PPB_MPU_RASR_ENABLE_Msk;
 221              		.loc 1 42 0 discriminator 12
 222 0044 D0F8A05D 		ldr	r5, [r0, #3488]
 223 0048 25F00105 		bic	r5, r5, #1
 224 004c C0F8A05D 		str	r5, [r0, #3488]
  43:MPUeasy.c     **** 
  44:MPUeasy.c     **** 	PPB->MPU_RBAR = ((uint32_t) config.baseAddress >> addrShift) \
 225              		.loc 1 44 0 discriminator 12
 226 0050 F240     		lsrs	r2, r2, r6
 227              	.LVL6:
  45:MPUeasy.c     **** 	                                               << addrShift;
 228              		.loc 1 45 0 discriminator 12
 229 0052 B240     		lsls	r2, r2, r6
  44:MPUeasy.c     **** 	                                               << addrShift;
 230              		.loc 1 44 0 discriminator 12
 231 0054 C0F89C2D 		str	r2, [r0, #3484]
  46:MPUeasy.c     **** 	PPB->MPU_RASR = (config.permissions << PPB_MPU_RASR_AP_Pos \
 232              		.loc 1 46 0 discriminator 12
 233 0058 1806     		lsls	r0, r3, #24
  47:MPUeasy.c     ****                 & (PPB_MPU_RASR_XN_Msk | PPB_MPU_RASR_AP_Msk))  | \
 234              		.loc 1 47 0 discriminator 12
 235 005a 00F0B850 		and	r0, r0, #385875968
  48:MPUeasy.c     **** 	                (autoSet            << PPB_MPU_RASR_B_Pos  )  | \
 236              		.loc 1 48 0 discriminator 12
 237 005e 2204     		lsls	r2, r4, #16
  49:MPUeasy.c     ****             ((config.size > 0 ? config.size - 1 : config.size)\
  50:MPUeasy.c     **** 	                                    << PPB_MPU_RASR_SIZE_Pos\
  51:MPUeasy.c     **** 	                                     & PPB_MPU_RASR_SIZE_Msk) | \
 238              		.loc 1 51 0 discriminator 12
 239 0060 71B9     		cbnz	r1, .L13
 240              		.loc 1 51 0 is_stmt 0
 241 0062 0021     		movs	r1, #0
 242              	.LVL7:
 243              	.L7:
  52:MPUeasy.c     **** 	                (config.permissions >> 7 \
  53:MPUeasy.c     **** 	                                     & PPB_MPU_RASR_ENABLE_Msk);
 244              		.loc 1 53 0 is_stmt 1
 245 0064 C3F3C013 		ubfx	r3, r3, #7, #1
 246              	.LVL8:
  51:MPUeasy.c     **** 	                (config.permissions >> 7 \
 247              		.loc 1 51 0
 248 0068 0343     		orrs	r3, r3, r0
 249 006a 1343     		orrs	r3, r3, r2
 250 006c 0B43     		orrs	r3, r3, r1
  46:MPUeasy.c     ****                 & (PPB_MPU_RASR_XN_Msk | PPB_MPU_RASR_AP_Msk))  | \
 251              		.loc 1 46 0
 252 006e 4FF0E022 		mov	r2, #-536813568
 253 0072 C2F8A03D 		str	r3, [r2, #3488]
  54:MPUeasy.c     **** }
 254              		.loc 1 54 0
 255 0076 05B0     		add	sp, sp, #20
 256              	.LCFI2:
 257              		.cfi_remember_state
 258              		.cfi_def_cfa_offset 12
 259              		@ sp needed
 260 0078 70BC     		pop	{r4, r5, r6}
 261              	.LCFI3:
 262              		.cfi_restore 6
 263              		.cfi_restore 5
 264              		.cfi_restore 4
 265              		.cfi_def_cfa_offset 0
 266              	.LVL9:
 267 007a 7047     		bx	lr
 268              	.LVL10:
 269              	.L9:
 270              	.LCFI4:
 271              		.cfi_restore_state
  35:MPUeasy.c     **** 	                  config.baseAddress < (void *)0x40000000 ? 0x6 : \
 272              		.loc 1 35 0
 273 007c 0624     		movs	r4, #6
 274 007e D9E7     		b	.L6
 275              	.LVL11:
 276              	.L13:
  49:MPUeasy.c     **** 	                                    << PPB_MPU_RASR_SIZE_Pos\
 277              		.loc 1 49 0 discriminator 1
 278 0080 0139     		subs	r1, r1, #1
 279              	.LVL12:
  50:MPUeasy.c     **** 	                                     & PPB_MPU_RASR_SIZE_Msk) | \
 280              		.loc 1 50 0 discriminator 1
 281 0082 4900     		lsls	r1, r1, #1
 282              	.LVL13:
  51:MPUeasy.c     **** 	                (config.permissions >> 7 \
 283              		.loc 1 51 0 discriminator 1
 284 0084 01F03E01 		and	r1, r1, #62
 285 0088 ECE7     		b	.L7
 286              		.cfi_endproc
 287              	.LFE130:
 289              		.section	.text.MemManage_Handler,"ax",%progbits
 290              		.align	1
 291              		.global	MemManage_Handler
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	MemManage_Handler:
 298              	.LFB131:
  55:MPUeasy.c     **** 
  56:MPUeasy.c     **** void MemManage_Handler(void) {
 299              		.loc 1 56 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
  57:MPUeasy.c     ****   uint8_t MMFSR = PPB->CFSR;
 304              		.loc 1 57 0
 305 0000 4FF0E023 		mov	r3, #-536813568
 306 0004 D3F8283D 		ldr	r3, [r3, #3368]
 307              	.LVL14:
  58:MPUeasy.c     ****   void *MMFAR = (MMFSR & PPB_CFSR_MMARVALID_Msk) ? (void *) PPB->MMFAR : NULL;
 308              		.loc 1 58 0
 309 0008 13F0800F 		tst	r3, #128
 310 000c 1CBF     		itt	ne
 311 000e 4FF0E023 		movne	r3, #-536813568
 312              	.LVL15:
 313 0012 D3F8343D 		ldrne	r3, [r3, #3380]
 314              	.L16:
 315 0016 FEE7     		b	.L16
 316              		.cfi_endproc
 317              	.LFE131:
 319              		.text
 320              	.Letext0:
 321              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 322              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 323              		.file 5 "/usr/arm-none-eabi/include/sys/lock.h"
 324              		.file 6 "/usr/arm-none-eabi/include/sys/_types.h"
 325              		.file 7 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 326              		.file 8 "/usr/arm-none-eabi/include/sys/reent.h"
 327              		.file 9 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Include/core_cm4.h"
 328              		.file 10 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/system_
 329              		.file 11 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/XMC4500
 330              		.file 12 "MPUeasy.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 MPUeasy.c
     /tmp/cckRgJAt.s:17     .text.enableMPU:0000000000000000 $t
     /tmp/cckRgJAt.s:24     .text.enableMPU:0000000000000000 enableMPU
     /tmp/cckRgJAt.s:94     .text.disableMPU:0000000000000000 $t
     /tmp/cckRgJAt.s:101    .text.disableMPU:0000000000000000 disableMPU
     /tmp/cckRgJAt.s:162    .text.configMPU:0000000000000000 $t
     /tmp/cckRgJAt.s:169    .text.configMPU:0000000000000000 configMPU
     /tmp/cckRgJAt.s:290    .text.MemManage_Handler:0000000000000000 $t
     /tmp/cckRgJAt.s:297    .text.MemManage_Handler:0000000000000000 MemManage_Handler
                           .group:0000000000000000 wm4.0.36326cb9f2f282db52d0a8f4d7f6f490
                           .group:0000000000000000 wm4.stddef.h.39.99b5021e28f91cdb161c889e07266673
                           .group:0000000000000000 wm4._newlib_version.h.4.875b979a44719054cd750d0952ad3fd6
                           .group:0000000000000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.newlib.h.8.f6e543eac3f2f65163ba2ffe3b04987b
                           .group:0000000000000000 wm4.ieeefp.h.77.220d9cccac42cd58761758bee2df4ce6
                           .group:0000000000000000 wm4.config.h.220.6cac6a9685cfce5e83c17784171638d9
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:0000000000000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:0000000000000000 wm4._types.h.184.03611d4f6b5bec9997bcf4279eceba07
                           .group:0000000000000000 wm4.reent.h.17.90c2574d4acdcfce933db5cb09ff35fe
                           .group:0000000000000000 wm4.cdefs.h.47.14fad0b327eb9dcf106599b738d85132
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:0000000000000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:0000000000000000 wm4.core_cm4.h.32.6c6eb1c8daeca23ce7ba79c8e8120d52
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.91b63349961c35637933e4fba51b867b
                           .group:0000000000000000 wm4.core_cm4.h.172.fdd5a388a160bb6ff767b7d7ee212268
                           .group:0000000000000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:0000000000000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:0000000000000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:0000000000000000 wm4.xmc_common.h.92.3f4336a80569affab05a81145b87c2fc
                           .group:0000000000000000 wm4.MPUeasy.h.9.38db277834aa83585a0ea3fb277de25f

NO UNDEFINED SYMBOLS
